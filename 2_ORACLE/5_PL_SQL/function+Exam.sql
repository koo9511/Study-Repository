CREATE TABLE EXAM_MEMBERS
(
	"MID" VARCHAR2(50) PRIMARY KEY,
	"PWD" VARCHAR2(50),
	"NAME" VARCHAR2(50),
	"GENDER" VARCHAR2(50),
	"AGE" NUMBER,
	"BIRTHDAY" VARCHAR2(50),
	"MAJOR" VARCHAR2(50),
	"ADDRESS" VARCHAR2(50),
	"PHONE" VARCHAR2(50),
	"SSN" VARCHAR2(50),
	"IP" VARCHAR2(50),
	"REGDATE" TIMESTAMP
);
CREATE TABLE EXAM_ROLES
(
	"ROLE" VARCHAR(50),
	"INTRODUCTION" VARCHAR2(50)
);

CREATE TABLE EXAM_MEMBER_ROLES
(
	"MEMBER_UID" VARCHAR2(50),
	"ROLE" VARCHAR2(50)
);

Insert into EXAM_MEMBERS (MID,PWD,NAME,GENDER,AGE,BIRTHDAY,MAJOR,ADDRESS,PHONE,SSN,IP,REGDATE) values ('javaking','111','자바킹','남성',19,'1996-07-08','컴퓨터','서울시 서대문구','010-1235-2346','980308-1212121','211.234.54.35',to_timestamp('13/12/13 00:00:00.000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into EXAM_MEMBERS (MID,PWD,NAME,GENDER,AGE,BIRTHDAY,MAJOR,ADDRESS,PHONE,SSN,IP,REGDATE) values ('dong','222','홍길동','남성',18,'1997-02-01','도술','제주특별시 북제주군','011-435-6373','990201-1252221','64.14.154.123',to_timestamp('13/12/13 00:00:00.000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into EXAM_MEMBERS (MID,PWD,NAME,GENDER,AGE,BIRTHDAY,MAJOR,ADDRESS,PHONE,SSN,IP,REGDATE) values ('dragon','111','손오공','남성',15,'2000-12-13','도술','경기도 구리시','010-1235-2345','960308-1122121','211.238.14.123',to_timestamp('13/12/15 00:00:00.000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into EXAM_MEMBERS (MID,PWD,NAME,GENDER,AGE,BIRTHDAY,MAJOR,ADDRESS,PHONE,SSN,IP,REGDATE) values ('lee','333','이순신','남성',20,'1995-11-11','무술','한성부 건천동','010-1235-2345','450428-122221','211.111.111.111',to_timestamp('45/04/28 00:00:00.000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into EXAM_MEMBERS (MID,PWD,NAME,GENDER,AGE,BIRTHDAY,MAJOR,ADDRESS,PHONE,SSN,IP,REGDATE) values ('yay','111','Rin','여성',25,'1990-10-21','게임학','서울시 강서구','010-2521-2211','960308-123331','211.234.54.35',to_timestamp('14/01/06 00:00:00.000000000','RR/MM/DD HH24:MI:SSXFF'));
INSERT INTO EXAM_MEMBERS (MID,PWD,NAME,GENDER,AGE,BIRTHDAY,MAJOR,ADDRESS,PHONE,SSN,IP,REGDATE) VALUES ('kang','122','강감찬','남성',19,'1996-08-08','검술','서울시 동대문구','010-3335-2777','19960808-1223451','211.234.54.35',TO_TIMESTAMP('14/01/05 00:00:00.000000000','RR/MM/DD HH24:MI:SSXFF'));

INSERT INTO EXAM_ROLES VALUES('STUDENT','학생');
INSERT INTO EXAM_ROLES VALUES('TEACHER','선생님');
INSERT INTO EXAM_ROLES VALUES('ADMIN','관리자');

INSERT INTO EXAM_MEMBER_ROLES VALUES('javaking','ADMIN');
INSERT INTO EXAM_MEMBER_ROLES VALUES('dong','STUDENT');
INSERT INTO EXAM_MEMBER_ROLES VALUES('JAVAKING1','STUDENT');
INSERT INTO EXAM_MEMBER_ROLES VALUES('javaking','TEACHER');

COMMIT;
SELECT * FROM EXAM_MEMBERS;
SELECT * FROM EXAM_ROLES;
SELECT * FROM EXAM_MEMBER_ROLES;


select MID, PWD, NAME, ROLE 
from exam_members INNER JOIN EXAM_MEMBER_ROLES
ON MID=MEMBER_UID;

-- javaking / 111 / 자바킹 // ADMIN, TEACHER
select MID, PWD, NAME, GET_ROLES(MID) ROLE 
from exam_members

--함수만들기
CREATE OR REPLACE FUNCTION GET_ROLES
(
    V_MID VARCHAR2      
)
RETURN VARCHAR2 -- 함수정의시 RETURN 타입 지정
IS
    V_RESULT VARCHAR2(100) := '';
    V_CNT NUMBER := 0;
    CURSOR C_ROLE IS SELECT "ROLE" FROM EXAM_MEMBER_ROLES WHERE MEMBER_UID=V_MID;   
BEGIN
    SELECT COUNT(*) INTO V_CNT FROM EXAM_MEMBER_ROLES WHERE MEMBER_UID = V_MID;
    FOR V_ROLE IN C_ROLE LOOP
        V_RESULT := V_RESULT || V_ROLE."ROLE";
        
        IF C_ROLE%ROWCOUNT < V_CNT THEN --마지막 로우가 아니면
            V_RESULT := V_RESULT || ',';
        END IF;
    END LOOP;   
    RETURN V_RESULT; -- 함수가 수행되고 결과값 리턴
END;
--함수를 사용하여 결과 출력
SELECT MID, PWD, NAME, GET_ROLES(MID) FROM EXAM_MEMBERS; 

