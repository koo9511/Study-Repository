<변수(Variable)>
  : 메모리(RAM)에 값을 기록하기위한 장소(공간)
  - 값을 기록하기 위한 방

 ** 컴퓨터에서의 프로그램 작동 원리 **
	키보드로 부터 값을 입력 ---> 입력버퍼(stdin)---> 메모리에 기록
	파일로 부터 값을 읽음
	네트워크로 부터 전송받은 값
	DB 서버로 부터 읽어온 값

	---> CPU 가 읽어가서 계산함 ---> 계산한 결과를 다시 메모리로 보냄
	---> 메모리에 결과값 기록함 ---> 화면에 출력함
				파일에 저장함
				네트워크로 전송함
				DB 서버에 기록함

 => 프로그램이 실행이 되려면, 먼저 사용될 값에 대한 메모리 기록이 먼저
	이루어 져야 함.
 => 값이 기록되기 위해서는 값 기록장소(변수공간)부터 만들어야 됨.

 => 클래스의 멤버함수인 메소드 {} 안에서 주로 만들어서 사용됨
	: 메소드 {} 이나, 제어문{} 안에서 만들어진 변수를
	  지역변수(Locale Variable) 이라고 함.
 => 클래스의 멤버변수인 필드는 전역변수(Global Variable) 라고 함

//-----------------------------------------------------------------------------------
* 값의 종류(Data Type)

 - 논리값 : true(참), false(거짓)
 - 숫자 - 정수형 : 소숫점 이하값을 취급 안하는 수(-17, 0, 2, 33)
       - 실수형 : 소숫점 이하값을 취급 하는 수(1.234, -34.5, 3.14159)
 - 문자 - 한문자 : 자바에서는 유니코드 문자셋을 사용하므로,
		한글, 중국어 등 2바이트 문자를 한 글자로 취급함
       - 문자열 : 여러 개의 문자를 나열한 형태

* 자료형(Data Type)
  : 값을 종류별로 구분하기 위해 제공되는 단어

<기본(Primitive) 자료형>
 - 논리형 : boolean
 - 정수형 - 1바이트짜리 정수 : byte
	  2바이트짜리 정수 : short
	  4바이트짜리 정수 : int (정수의 기본형임)
	  8바이트짜리 정수 : long
 - 실수형 - 4바이트 실수 : float
	- 8바이트 실수 : double (실수의 기본형임)
 - 한문자 - 2바이트 문자 : char
 - 문자열 - 기본 자료형에는 제공 안 되고, 클래스형으로 제공됨
	  String 클래스를 기본으로 사용함.

* 변수 공간을 메모리에 만들고, 그 다음에 그 변수공간에 해당 값을 기록함
1. 변수 선언 
  : 변수 공간을 메모리에 만드는 작업
	자료형 변수명;	//해당 자료형의 값을 기록할 수 있는 방을
			//만들고 방이름으로 변수명을 붙임
	ex>
	boolean flag;	//1byte
	byte num;	//1byte
	short stest;	//2byte
	int age;		//4byte
	long pay;		//8byte
	float radius;	//4byte
	double tax;	//8byte
	char gender;	//2byte
	String name;

	* 변수방에는 선언시 지정한 자료형의 값만 기록할 수 있음 *

2. 준비된 변수방에 값 기록
	변수명 = 값;
	* = : 대입연산자임. 오른쪽에서 왼쪽으로 진행됨
		오른쪽은 반드시 값이 위치해야 함
		왼쪽은 반드시 변수가 존재해야 함 *
	ex>
	flag = false;
	num = (byte)12;	//12 라는 리터럴값은 기본 자료형이 int 임
	stest = (short)120;
	age = 29;
	pay = 12345L;	//iso에서 정한 표현 규칙임
	radius = 54.7f;	//54.7 이라는 리터럴값은 기본형이 double임.
			//iso에서 정한 표현 규칙임
	tax = 10.0;
	gender = 'F';	//숫자(계산에 사용할 수 있는 값)와 
		//문자(계산에 사용할 수 없는 값)는 반드시 구분되어야 함
		//문자리터럴 값은 반드시 '문자'로 표시해야 함

	** 문자열 값은 반드시 "문자열리터럴" 로 표시함 **

3. 변수 사용 : CPU 에게 변수방의 값을 읽어가서 계산하라는 의미임.
 ex>
	int a = 10;
	int b = 20;

	int result = a + b;

	System.out.println("a : " + a);
	System.out.println("b : " + b);
	System.out.println("a + b = " + result);

*** 변수의 초기화 ***
	: 변수공간 선언과 동시에 초기값 기록하는 것
	=> 초기값 : 변수방에 첫번째로 기록되는 값

	자료형 변수명 = 초기값;

	ex>
	boolean flag = false;
	byte num = (byte)12;
	short stest = (short)120;
	int age = 29;
	long pay = 1234567L;
	float radius = 34.5f;
	double tax = 10.5;
	char gender = 'M';

	String name = "홍길동";



* 프로그래밍 실행 순서 *
 => 클래스 안의 메소드들에 의해 실행 순서가 정해짐
 => 실행 순서는 개발자가 지정함
 => 메소드 안의 프로그래밍 순서도 정해져 있음

----------	1. 변수 공간 준비 : 변수 선언 --> 지역변수라고 함
		[예약어] 자료형 변수명;

 => 지역변수 자료형 앞에 사용할 수 있는 키워드는 final 임.
	final 자료형 변수명 = 초기값;
	: 해당 변수방에 기록된 값 변경 불가를 의미함
	ex>
	double pi = 3.14159;	//원주율
	pi = 7.89;	//이전 값 지우고, 새 값 기록됨

	=> final double PI = 3.14159;
	pi = 7.89;	//Error

---------------- 2. 준비된 변수공간에 값 기록 처리
 => 직접 값 대입하는 경우
	변수명 = 값;
 => 키보드를 통해서 값을 입력받아 기록하는 경우
	변수명 = 키보드입력용 객체.읽기용메소드();
 
---------------- 3. 준비된 값에 대한 계산 처리
	: 연산자와 제어문이 사용됨
 => 연산자(Operator) : 값 계산에 사용되는 계산용 문자
 => 제어문(처리문) : 조건문, 반복문, 분기문 사용



--------------- 4. 계산 결과값에 대한 처리
 => 화면에 출력 확인하는 경우
	System.out.print/println/printf("출력할 내용" + 결과값);
	화면출력용객체.기록용 메소드("출력할 내용" + 결과값);

 => 외부 장치로 내보내는 경우(출력)
	외부장치출력용객체.기록용메소드("전송할 내용" + 전송할 값);
