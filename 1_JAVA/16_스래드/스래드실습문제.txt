[day27 Thread 실습문제]
 - 패키지 : day27.silsub

<문제 1>
 - 실행용 클래스 : munjae1.TestThread1.java
 - Thread 클래스 : munjae1.Increment.java
		munjae1.Decrement.java
 - 구현내용
	1. 두 클래스 모두 Runnable 인터페이스 상속받음
	2. Increment 클래스는 생성시, 정수를 하나 초기값으로 전달받음
	  Increment inc = new Increment(50);
		>> 1부터 50 될 때까지 정수를 2씩 증가시키는 내용 반복함
		>> 숫자 하나 출력후 0.05초 멈춰있게함
	3. Decrement 클래스 생성시, 정수를 두 개를 초기값으로 전달받음
	  Decrement dec = new Decrement(12, 45);
		>> 45부터 12될 때까지 1씩 감소시키는 내용 반복함
		>> 숫자 하나 출력후 0.1초 멈춰 있게함.
	4. 실행용 클래스에서 두 클래스를 멀티스래딩함.


<문제 2>
 : 가로 7픽셀, 세로 7픽셀 사각형을 전달된 갯수만큼 프레임에 그리는 클래스와
  지름이 5인 원을 전달된 갯수만큼 프레임에 그리는 클래스를 멀티스레딩 처리하시오.
 - 클래스명 : munjae2.DrawRect.java
	//파란색 속이 채워진 사각형 그리는 클래스 
	1. Thread 상속받음
	2. 필드 선언
		private int rectNumber;	//그릴 사각형 갯수
		private Random r;
		private int x;	//사각형 x좌표
		private int y;	//사격형 y좌표
		private JFrame frame;

	3. 매개변수 있는 생성자 작성
		public DrawRect(JFrame f, int 사각형갯수){}

	4. run() 메소드 오버라이딩
		>> 전달된 갯수만큼 사각형이 그려지게 반복처리함
		>> 사각형의 x, y 좌표는 프레임 크기안에서 임의의 난수를
		   사용함.
		>> 사각형의 width, height 는 10로 지정함

 - 클래스명 : munjae2.DrawCircle.java	
	//빨간색 속이 채워진 원 그리는 클래스	
	1. Thread 상속받음
	2. 필드 선언
		private int circleNumber;	//그릴 원 갯수
		private Random r;
		private int x;	//원위치 x좌표
		private int y;	//원위치 y좌표
		private JFrame frame;

	3. 매개변수 있는 생성자 작성
		public DrawCircle(JFrame f, int 원갯수){}

	4. run() 메소드 오버라이딩
		>> 전달된 갯수만큼 속이 채워진 원이 그려지게 반복처리함
		>> 원의 x, y 좌표는 프레임 크기안에서 임의의 난수를
		   사용함.
		>> 원의 반지름은 12로 지정함	 

 - 실행용 클래스 : munjae2.TestDrawing.java
	>> main() 포함
	1. JFrame 상속받음
	2. 생성자에서 500, 500 크기의 프레임 구성함
	3. main() 에서 DrawRect와 DrawCircle에 대한 스래드 실행함

<문제 3>
 - 실행 클래스명 : munjae3.CarGame.java
	>> main() 포함
	>> JFrame 상속받음
	>> 생성자에서 600, 200 크기의 프레임 구성함
	>> JLabel 객체 3개 필드로 선언
	>> JLabel 객체에 이미지를 icon으로 설정함
	>> 각 레이블의 크기는 100, 100으로 지정함
	>> 각 레이블은 y축으로 50간격을 두고 배치함
	>> 내부클래스 스래드 실행시킴

 - Thread 를 상속받은 내부클래스 작성 : MyThread
 - 구현 내용 : 
	1. images 폴더 복사해서, 해당 프로젝트에 붙여넣기함
	2. run() 오버라이딩
	  >> x좌표 발생 구문을 120번 반복함
	  >> x좌표는 랜덤하게 10까지의 정수범위 안에서 발생시켜 증가시킴
	  >> 새로 발생한 x좌표를 각 레이블 객체의 위치값으로 다시 적용함






